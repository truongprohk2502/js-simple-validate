{"code":"var alpha = {\n    \"en-US\": /^[A-Z]+$/i,\n    \"de-DE\": /^[A-ZÄÖÜß]+$/i,\n    \"es-ES\": /^[A-ZÁÉÍÑÓÚÜ]+$/i,\n    \"fr-FR\": /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n    \"ja-JP\": /^[ぁ-んァ-ヶｦ-ﾟ一-龠ー・。、]+$/i,\n    \"ru-RU\": /^[А-ЯЁ]+$/i,\n    \"th-TH\": /^[ก-๐\\s]+$/i,\n    \"vi-VN\": /^[A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\n    \"ko-KR\": /^[ㄱ-ㅎㅏ-ㅣ가-힣]*$/,\n};\n/**\n * Validates if the given string contains only alphabetical letters.\n *\n * @param {any} input The string to validate.\n * @returns {boolean} Returns true if the string is alphabet, false otherwise.\n */\nvar isAlphabet = function (input, locale) {\n    var string = input;\n    // Returns false input is not a string\n    if (typeof string !== \"string\")\n        return false;\n    // Replace all white spaces and newlines with empty string\n    string = string.replace(/\\s/g, \"\").replace(/\\n|\\r/, \"\");\n    if (locale in alpha)\n        return alpha[locale].test(string);\n    // Throws an error if locale does not exist\n    throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n};\nexport { isAlphabet };\n//# sourceMappingURL=is-alphabet.js.map","references":[],"map":"{\"version\":3,\"file\":\"is-alphabet.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/is-alphabet.ts\"],\"names\":[],\"mappings\":\"AAWA,IAAM,KAAK,GAAG;IACZ,OAAO,EAAE,WAAW;IACpB,OAAO,EAAE,eAAe;IACxB,OAAO,EAAE,kBAAkB;IAC3B,OAAO,EAAE,2BAA2B;IACpC,OAAO,EAAE,wBAAwB;IACjC,OAAO,EAAE,YAAY;IACrB,OAAO,EAAE,aAAa;IACtB,OAAO,EACL,8EAA8E;IAChF,OAAO,EAAE,gBAAgB;CAC1B,CAAC;AAEF;;;;;GAKG;AACH,IAAM,UAAU,GAAG,UAAC,KAAU,EAAE,MAAoB;IAClD,IAAI,MAAM,GAAG,KAAK,CAAC;IAEnB,sCAAsC;IACtC,IAAI,OAAO,MAAM,KAAK,QAAQ;QAAE,OAAO,KAAK,CAAC;IAE7C,0DAA0D;IAC1D,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IAExD,IAAI,MAAM,IAAI,KAAK;QAAE,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAEvD,2CAA2C;IAC3C,MAAM,IAAI,KAAK,CAAC,0BAAmB,MAAM,MAAG,CAAC,CAAC;AAChD,CAAC,CAAC;AAEF,OAAO,EAAE,UAAU,EAAgB,CAAC\"}","dts":{"name":"D:/Projects/NPM/js-simple-validate/dist/types/is-alphabet.d.ts","writeByteOrderMark":false,"text":"type LanguageType = \"en-US\" | \"de-DE\" | \"es-ES\" | \"fr-FR\" | \"ja-JP\" | \"ru-RU\" | \"th-TH\" | \"vi-VN\" | \"ko-KR\";\n/**\n * Validates if the given string contains only alphabetical letters.\n *\n * @param {any} input The string to validate.\n * @returns {boolean} Returns true if the string is alphabet, false otherwise.\n */\ndeclare const isAlphabet: (input: any, locale: LanguageType) => boolean;\nexport { isAlphabet, LanguageType };\n"}}
